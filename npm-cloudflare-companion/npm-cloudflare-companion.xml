<?xml version="1.0" encoding="utf-8"?>
<Containers>
  <Date>2023-07-06</Date>
  <Beta>False</Beta>
  <Category>Proxy:Web</Category>
  <Name>NginxProxyCloudflareCompanion</Name>
  <Project>https://github.com/tiredofit/docker-nginx-proxy-cloudflare-companion</Project>
  <Overview>
    Nginx Proxy with Cloudflare Companion. This container is designed to work with jwilder's nginx-proxy and automatically update DNS records on Cloudflare with the host's IP address.
  </Overview>
  <Description>
    Nginx Proxy with Cloudflare Companion. This container is designed to work with jwilder's nginx-proxy and automatically update DNS records on Cloudflare with the host's IP address. It supports Docker and Docker Swarm mode.
  </Description>
  <Registry>https://hub.docker.com/r/tiredofit/nginx-proxy-cloudflare-companion/</Registry>
  <GitHub>https://github.com/tiredofit/docker-nginx-proxy-cloudflare-companion</GitHub>
  <Repository>tiredofit/nginx-proxy-cloudflare-companion:latest</Repository>
  <BindTime>true</BindTime>
  <Privileged>false</Privileged>
  <Data>
    <Volume>
      <HostDir>/mnt/user/appdata/nginx-proxy-cloudflare-companion/conf/vhost.d</HostDir>
      <ContainerDir>/etc/nginx/vhost.d</ContainerDir>
      <Mode>rw</Mode>
    </Volume>
    <Volume>
      <HostDir>/mnt/user/appdata/nginx-proxy-cloudflare-companion/conf/html</HostDir>
      <ContainerDir>/usr/share/nginx/html</ContainerDir>
      <Mode>rw</Mode>
    </Volume>
    <Volume>
      <HostDir>/mnt/user/appdata/nginx-proxy-cloudflare-companion/conf/certs</HostDir>
      <ContainerDir>/etc/nginx/certs</ContainerDir>
      <Mode>ro</Mode>
    </Volume>
    <Volume>
      <HostDir>/mnt/user/appdata/nginx-proxy-cloudflare-companion/logs</HostDir>
      <ContainerDir>/var/log/nginx</ContainerDir>
      <Mode>rw</Mode>
    </Volume>
    <Volume>
      <HostDir>/var/run/docker.sock</HostDir>
      <ContainerDir>/tmp/docker.sock</ContainerDir>
      <Mode>ro</Mode>
    </Volume>
  </Data>
  <Networking>
    <Mode>bridge</Mode>
    <Publish>
      <Port>
        <HostPort>80</HostPort>
        <ContainerPort>80</ContainerPort>
        <Protocol>tcp</Protocol>
      </Port>
      <Port>
        <HostPort>443</HostPort>
        <ContainerPort>443</ContainerPort>
        <Protocol>tcp</Protocol>
      </Port>
    </Publish>
  </Networking>
  <Environment>
    <Variable>
      <Name>DOCKER_ENTRYPOINT</Name>
      <Value>unix://var/run/docker.sock</Value>
    </Variable>
    <Variable>
      <Name>DOCKER_HOST</Name>
      <Value></Value>
    </Variable>
    <Variable>
      <Name>DOCKER_CERT_PATH</Name>
      <Value></Value>
    </Variable>
    <Variable>
      <Name>DOCKER_TLS_VERIFY</Name>
      <Value>1</Value>
    </Variable>
    <Variable>
      <Name>REFRESH_ENTRIES</Name>
      <Value>TRUE</Value>
    </Variable>
      <Name>SWARM_MODE</Name>
      <Value>FALSE</Value>
    </Variable>
    <Variable>
      <Name>CF_EMAIL</Name>
      <Value></Value>
    </Variable>
    <Variable>
      <Name>CF_TOKEN</Name>
      <Value></Value>
    </Variable>
    <Variable>
      <Name>DEFAULT_TTL</Name>
      <Value>1</Value>
    </Variable>
    <Variable>
      <Name>TARGET_DOMAIN</Name>
      <Value></Value>
    </Variable>
    <Variable>
      <Name>DOMAIN1</Name>
      <Value></Value>
    </Variable>
    <Variable>
      <Name>DOMAIN1_ZONE_ID</Name>
      <Value></Value>
    </Variable>
    <Variable>
      <Name>DOMAIN1_PROXIED</Name>
      <Value></Value>
    </Variable>
    <Variable>
      <Name>DOMAIN2</Name>
      <Value></Value>
    </Variable>
    <Variable>
      <Name>DOMAIN2_ZONE_ID</Name>
      <Value></Value>
    </Variable>
    <Variable>
      <Name>DOMAIN2_PROXIED</Name>
      <Value></Value>
    </Variable>
  </Environment>
  <WebUI>http://[IP]:[PORT:80]</WebUI>
  <Banner></Banner>
  <Icon>https://github.com/tiredofit/docker-nginx-proxy-cloudflare-companion/raw/master/logo.png</Icon>
</Containers>
